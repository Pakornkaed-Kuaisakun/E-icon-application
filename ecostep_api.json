{
  "openapi": "3.0.3",
  "info": {
    "title": "E-Icon Application API",
    "version": "1.0.0",
    "description": "API for the E-Icon eco-friendly app: user management, dashboard, tasks, friends, ranking, photo proofs and more."
  },
  "servers": [
    {
      "url": "https://e-icon-application-1.onrender.com",
      "description": "Production server"
    }
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "summary": "Register new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": { "type": "string" },
                  "email": { "type": "string", "format": "email" },
                  "password": { "type": "string" }
                },
                "required": ["username", "email", "password"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "User created" },
          "400": { "description": "Bad request" }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "summary": "Login user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string", "format": "email" },
                  "password": { "type": "string" }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": { "type": "string" }
                  }
                }
              }
            }
          },
          "401": { "description": "Invalid credentials" }
        }
      }
    },
    "/auth/users/{id}": {
      "get": {
        "summary": "Get user by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "User found" },
          "404": { "description": "User not found" }
        }
      }
    },
    "/dashboard/{userid}": {
      "get": {
        "summary": "Get dashboard data for user",
        "parameters": [
          {
            "in": "path",
            "name": "userid",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Dashboard data" }
        }
      }
    },
    "/dashboard/growTree": {
      "post": {
        "summary": "Use grow tree feature",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userid": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Tree grown" }
        }
      }
    },
    "/dashboard/changePassword": {
      "post": {
        "summary": "Change user password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userid": { "type": "string" },
                  "oldPassword": { "type": "string" },
                  "newPassword": { "type": "string" }
                },
                "required": ["userid", "oldPassword", "newPassword"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Password changed" }
        }
      }
    },
    "/friend/add": {
      "post": {
        "summary": "Send friend request",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "senderID": { "type": "string" },
                  "receiverID": { "type": "string" }
                },
                "required": ["senderID", "receiverID"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Friend request sent" }
        }
      }
    },
    "/friend/search/{email}": {
      "get": {
        "summary": "Search user by email",
        "parameters": [
          {
            "in": "path",
            "name": "email",
            "required": true,
            "schema": { "type": "string", "format": "email" }
          }
        ],
        "responses": {
          "200": { "description": "User found" }
        }
      }
    },
    "/friend/getFriendRequestStatus": {
      "get": {
        "summary": "Get friend request status",
        "responses": {
          "200": { "description": "Status data" }
        }
      }
    },
    "/friend/getFriendRequest/{senderID}": {
      "get": {
        "summary": "Get friend request by sender ID",
        "parameters": [
          {
            "in": "path",
            "name": "senderID",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Friend request data" }
        }
      }
    },
    "/friend/requestAccept": {
      "post": {
        "summary": "Accept friend request",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "requestID": { "type": "string" }
                },
                "required": ["requestID"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Friend request accepted" }
        }
      }
    },
    "/friend/getFriendData/{userid}": {
      "get": {
        "summary": "Get friend data for user",
        "parameters": [
          {
            "in": "path",
            "name": "userid",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Friend list" }
        }
      }
    },
    "/photo/getProofTask/{userid}": {
      "get": {
        "summary": "Get proof task for user",
        "parameters": [
          {
            "in": "path",
            "name": "userid",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Proof task" }
        }
      }
    },
    "/photo/ConfirmImage": {
      "post": {
        "summary": "Confirm uploaded image",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "imageID": { "type": "string" }
                },
                "required": ["imageID"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Image confirmed" }
        }
      }
    },
    "/photo/RejectImage": {
      "post": {
        "summary": "Reject uploaded image",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "imageID": { "type": "string" }
                },
                "required": ["imageID"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Image rejected" }
        }
      }
    },
    "/rank/globalRank": {
      "get": {
        "summary": "Get global rank",
        "responses": {
          "200": { "description": "Global ranking data" }
        }
      }
    },
    "/task/getTask": {
      "post": {
        "summary": "Get task list",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userid": { "type": "string" }
                },
                "required": ["userid"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Task list" }
        }
      }
    },
    "/task/getDailyTask/{userid}": {
      "get": {
        "summary": "Get daily tasks for user",
        "parameters": [
          {
            "in": "path",
            "name": "userid",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Daily tasks" }
        }
      }
    },
    "/task/updateTaskStatus": {
      "post": {
        "summary": "Update task status",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "taskID": { "type": "string" },
                  "status": { "type": "string" }
                },
                "required": ["taskID", "status"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Task updated" }
        }
      }
    },
    "/appInfo": {
      "get": {
        "summary": "Get application info",
        "responses": {
          "200": { "description": "App info" }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
